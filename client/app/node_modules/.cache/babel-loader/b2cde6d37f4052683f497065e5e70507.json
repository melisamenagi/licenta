{"ast":null,"code":"var _jsxFileName = \"/Users/melisamenagi/Desktop/Facultate/Licenta/licenta/client/app/src/components/NavBar/Indicators.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { store } from \"../../features/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from 'react';\nimport Navbar from \"./Navbar\";\nimport \"./Profil.css\";\nimport { startFeedbackIntermediar } from \"../../features/sessionSlice\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Indicators() {\n  _s();\n\n  const currentUser = useSelector(state => store.getState().user);\n  console.log(currentUser);\n  const dispatch = useDispatch();\n  const [entitate, setEntitate] = useState(\"\");\n  const [isNPS, setIsNPS] = useState(false);\n  const [NPS, setNPS] = useState(0);\n  const entitati = [\"Econosofia\", \"International Affairs\", \"Leadership Development\", \"Business Club\", \"Human Resources\", \"Business Development\", \"Public Relations\", \"Marketing\", \"Creative\"];\n\n  const handleClickHR = () => {\n    // dispatch(startFeedbackIntermediar())\n    Axios.post(`http://localhost:3001/api/indicator/${entitate}`, {\n      indicator: \"eNPS\"\n    }).then(response => {\n      console.log(response.data); // getFeedback()\n    }).catch(err => console.log(err));\n  };\n\n  const getNPS = () => {\n    entitati.forEach(entitate => {\n      Axios.get(`http://localhost:3001/api/indicator/management/${entitate}/eNPS`).then(response => {\n        const feedback = response.data;\n        console.log(response.data);\n        let scoruri = feedback.map(f => f.scor);\n        let count = 0;\n        let promoters = 0;\n        let detractors = 0;\n        scoruri.forEach(element => {\n          if (element >= 9) {\n            promoters++;\n          } else if (element <= 6) {\n            detractors++;\n          }\n\n          count++;\n        });\n        let procent = promoters / count * 100 - detractors / count * 100;\n        setIsNPS(true);\n        setNPS(procent.toFixed(1)); // console.log(tema,speakerFb,raport, suma, count, medie)\n      }).catch(err => console.log(err));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [NPS, entitati.map(item => {\n      return /*#__PURE__*/_jsxDEV(Training, { ...item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(Indicators, \"BtdsLd+3KmlP8Ygu+KwW8fO7hHw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Indicators;\nexport default Indicators;\n\nvar _c;\n\n$RefreshReg$(_c, \"Indicators\");","map":{"version":3,"sources":["/Users/melisamenagi/Desktop/Facultate/Licenta/licenta/client/app/src/components/NavBar/Indicators.js"],"names":["React","Link","store","useDispatch","useSelector","useEffect","useState","Navbar","startFeedbackIntermediar","Axios","Indicators","currentUser","state","getState","user","console","log","dispatch","entitate","setEntitate","isNPS","setIsNPS","NPS","setNPS","entitati","handleClickHR","post","indicator","then","response","data","catch","err","getNPS","forEach","get","feedback","scoruri","map","f","scor","count","promoters","detractors","element","procent","toFixed","item","id"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport { store } from \"../../features/store\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from 'react'\nimport Navbar from \"./Navbar\"\nimport \"./Profil.css\"\nimport { startFeedbackIntermediar } from \"../../features/sessionSlice\"\nimport Axios from 'axios'\n\nfunction Indicators(){\n    const currentUser = useSelector(state => store.getState().user)\n    console.log(currentUser)\n    const dispatch = useDispatch();\n    const [entitate, setEntitate] = useState(\"\")\n    const [isNPS, setIsNPS] = useState(false)\n    const [NPS, setNPS] = useState(0)\n    const entitati = [\"Econosofia\", \"International Affairs\", \"Leadership Development\", \"Business Club\", \"Human Resources\", \"Business Development\", \"Public Relations\", \"Marketing\", \"Creative\"]\n\n    const handleClickHR = () => {\n        // dispatch(startFeedbackIntermediar())\n        Axios.post(`http://localhost:3001/api/indicator/${entitate}`, {\n            indicator: \"eNPS\"\n        }).then(response => {\n            console.log(response.data)\n            // getFeedback()\n        }).catch(err => console.log(err))    \n    }\n\n    const getNPS = () => {\n        entitati.forEach(entitate => {\n            Axios.get(`http://localhost:3001/api/indicator/management/${entitate}/eNPS`).then(response => {\n                const feedback = response.data\n                console.log(response.data)\n                let scoruri = feedback.map(f => f.scor)\n                let count = 0\n                let promoters = 0\n                let detractors = 0\n                scoruri.forEach(element => {\n                    if(element >= 9) {\n                        promoters++\n                    } else if(element <=6) {\n                        detractors++\n                    }\n                    count++\n                });\n                let procent = (promoters/count * 100) - (detractors/count * 100)\n                setIsNPS(true)\n                setNPS(procent.toFixed(1))\n                // console.log(tema,speakerFb,raport, suma, count, medie)\n            })\n            .catch(err => console.log(err))    \n        });\n    }\n\n    return(\n        <>\n         {NPS}\n         {entitati.map((item) => {\n                return <Training key={item.id} {...item} />\n                })}\n\n        </>\n    )\n}\n\nexport default Indicators"]},"metadata":{},"sourceType":"module"}