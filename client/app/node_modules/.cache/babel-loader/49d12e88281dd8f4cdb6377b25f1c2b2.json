{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const sessionSlice = createSlice({\n  name: 'session',\n  initialState: {\n    user: {},\n    isLoggedIn: false,\n    isFeedbackIntermediar: false\n  },\n  reducers: {\n    signIn: (state, action) => {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n    logOut: (state, action) => {\n      state.user = {};\n      state.isLoggedIn = false;\n    },\n    startFeedbackIntermediar: (state, action) => {\n      state.isFeedbackIntermediar = !state.isFeedbackIntermediar;\n    }\n  }\n});\nexport const {\n  signIn,\n  logOut,\n  startFeedbackIntermediar\n} = sessionSlice.actions;\nexport default sessionSlice.reducer;","map":{"version":3,"sources":["/Users/melisamenagi/Desktop/Facultate/Licenta/licenta/client/app/src/features/sessionSlice.js"],"names":["createSlice","sessionSlice","name","initialState","user","isLoggedIn","isFeedbackIntermediar","reducers","signIn","state","action","payload","logOut","startFeedbackIntermediar","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;AACtCE,EAAAA,IAAI,EAAE,SADgC;AAEtCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,UAAU,EAAE,KAFA;AAGZC,IAAAA,qBAAqB,EAAE;AAHX,GAFwB;AAOtCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACD,KAJO;AAKRO,IAAAA,MAAM,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,IAAN,GAAa,EAAb;AACAK,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACD,KARO;AASRQ,IAAAA,wBAAwB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACH,qBAAN,GAA8B,CAACG,KAAK,CAACH,qBAArC;AACD;AAXO;AAP4B,CAAD,CAAhC;AAsBP,OAAO,MAAM;AAAEE,EAAAA,MAAF;AAAUI,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,IAA+CZ,YAAY,CAACa,OAAlE;AACP,eAAeb,YAAY,CAACc,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const sessionSlice = createSlice({\n  name: 'session',\n  initialState: {\n    user: {},\n    isLoggedIn: false,\n    isFeedbackIntermediar: false\n  },\n  reducers: {\n    signIn: (state, action) => {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n    logOut: (state, action) => {\n      state.user = {};\n      state.isLoggedIn = false;\n    },\n    startFeedbackIntermediar: (state, action) => {\n      state.isFeedbackIntermediar = !state.isFeedbackIntermediar;\n    }\n  }\n});\n\nexport const { signIn, logOut, startFeedbackIntermediar } = sessionSlice.actions;\nexport default sessionSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}