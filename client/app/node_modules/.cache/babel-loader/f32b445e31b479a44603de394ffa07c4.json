{"ast":null,"code":"var _jsxFileName = \"/Users/melisamenagi/Desktop/Facultate/Licenta/licenta/client/app/src/components/NavBar/Todo.js\",\n    _s = $RefreshSig$();\n\nimport Training from \"../LearningPlan/Training\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { store } from \"../../features/store\";\nimport { useSelector } from \"react-redux\";\nimport \"./Done.css\";\nimport Indicator from \"../Indicator/Indicator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const currentUser = useSelector(state => store.getState().user);\n  const [trainings, setTrainings] = useState([]);\n  const [indicators, setIndicators] = useState([]);\n  useEffect(() => {\n    getTrainings();\n    getIndicators();\n  }, []); // useEffect(() => {\n  //     getIndicators()\n  // }, [])\n\n  const getTrainings = () => {\n    Axios.get(`http://localhost:3001/api/personal/${currentUser.id}/false`).then(response => {\n      console.log(response.data);\n      console.log(currentUser.id); // let listTrainings = [] \n      // response.data.forEach(element => {\n      //     element.forEach(training => listTrainings.push(training))\n      // })\n      // console.log(listTrainings)\n      // setTrainings(listTrainings)\n\n      setTrainings(response.data);\n    }).catch(err => console.log(err));\n  };\n\n  const getIndicators = () => {\n    Axios.get(`http://localhost:3001/api/indicator/${currentUser.id}`).then(response => {\n      console.log(response.data);\n      setIndicators(response.data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Acesta este feedback-ul pe care trebuie sa il oferi!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trainings\",\n      children: [indicators.map(item => {\n        return /*#__PURE__*/_jsxDEV(Indicator, { ...item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }, this);\n      }), trainings.map(item => {\n        return /*#__PURE__*/_jsxDEV(Training, { ...item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"dyZ8PvTxgTOOdQlZlDtyV1PxpRw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/melisamenagi/Desktop/Facultate/Licenta/licenta/client/app/src/components/NavBar/Todo.js"],"names":["Training","React","useState","useEffect","Axios","store","useSelector","Indicator","Todo","currentUser","state","getState","user","trainings","setTrainings","indicators","setIndicators","getTrainings","getIndicators","get","id","then","response","console","log","data","catch","err","map","item"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,0BAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACX,QAAMC,WAAW,GAAGH,WAAW,CAACI,KAAK,IAAIL,KAAK,CAACM,QAAN,GAAiBC,IAA3B,CAA/B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,YAAY;AACZC,IAAAA,aAAa;AAChB,GAHQ,EAGN,EAHM,CAAT,CALW,CAUX;AACA;AACA;;AAEA,QAAMD,YAAY,GAAG,MAAM;AACvBb,IAAAA,KAAK,CAACe,GAAN,CAAW,sCAAqCV,WAAW,CAACW,EAAG,QAA/D,EAAwEC,IAAxE,CAA6EC,QAAQ,IAAI;AACrFC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYf,WAAW,CAACW,EAAxB,EAFqF,CAGrF;AACA;AACA;AACA;AACA;AACA;;AACAN,MAAAA,YAAY,CAACQ,QAAQ,CAACG,IAAV,CAAZ;AACH,KAVD,EAUGC,KAVH,CAUSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAVhB;AAWH,GAZD;;AAcA,QAAMT,aAAa,GAAG,MAAM;AACxBd,IAAAA,KAAK,CAACe,GAAN,CAAW,uCAAsCV,WAAW,CAACW,EAAG,EAAhE,EAAmEC,IAAnE,CAAwEC,QAAQ,IAAI;AAChFC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAT,MAAAA,aAAa,CAACM,QAAQ,CAACG,IAAV,CAAb;AACH,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAHhB;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACKZ,UAAU,CAACa,GAAX,CAAgBC,IAAD,IAAU;AACtB,4BAAO,QAAC,SAAD,OAA6BA;AAA7B,WAAgBA,IAAI,CAACT,EAArB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CADL,EAIKP,SAAS,CAACe,GAAV,CAAeC,IAAD,IAAU;AACrB,4BAAO,QAAC,QAAD,OAA4BA;AAA5B,WAAeA,IAAI,CAACT,EAApB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA/CQZ,I;UACeF,W;;;KADfE,I;AAiDT,eAAeA,IAAf","sourcesContent":["import Training from \"../LearningPlan/Training\"\nimport React, { useState, useEffect } from \"react\"\nimport Axios from 'axios'\nimport { store } from \"../../features/store\"\nimport { useSelector } from \"react-redux\"\nimport \"./Done.css\"\nimport Indicator from \"../Indicator/Indicator\"\n\nfunction Todo(){\n    const currentUser = useSelector(state => store.getState().user)\n    const [trainings, setTrainings] = useState([])\n    const [indicators, setIndicators] = useState([])\n\n    useEffect(() => {\n        getTrainings()\n        getIndicators()\n    }, []);  \n    \n    // useEffect(() => {\n    //     getIndicators()\n    // }, [])\n\n    const getTrainings = () => {\n        Axios.get(`http://localhost:3001/api/personal/${currentUser.id}/false`).then(response => {\n            console.log(response.data)\n            console.log(currentUser.id)\n            // let listTrainings = [] \n            // response.data.forEach(element => {\n            //     element.forEach(training => listTrainings.push(training))\n            // })\n            // console.log(listTrainings)\n            // setTrainings(listTrainings)\n            setTrainings(response.data)\n        }).catch(err => console.log(err))\n    }\n\n    const getIndicators = () => {\n        Axios.get(`http://localhost:3001/api/indicator/${currentUser.id}`).then(response => {\n            console.log(response.data)\n            setIndicators(response.data)\n        }).catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>Acesta este feedback-ul pe care trebuie sa il oferi!</h1>\n            <div className=\"trainings\">\n                {indicators.map((item) => {\n                    return <Indicator key={item.id} {...item} />\n                })}\n                {trainings.map((item) => {\n                    return <Training key={item.id} {...item} />\n                })}\n            </div>\n        </div>)\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}